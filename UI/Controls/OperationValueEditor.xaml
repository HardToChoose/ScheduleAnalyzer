<c:ValueEditorBase x:Class="UI.Controls.OperationValueEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             
             xmlns:c="clr-namespace:GraphVisual.Controls;assembly=GraphVisual"
             xmlns:gl="clr-namespace:GraphLogic.Entities;assembly=GraphLogic">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <DockPanel
            Grid.Row="0"
            LastChildFill="True">
        <TextBlock
            DockPanel.Dock="Left"
            Margin="0,0,8,8"
            VerticalAlignment="Center"
            
            FontSize="13"
            Text="Складність:" />
        <TextBox x:Name="ComplexityTextBox"
            DockPanel.Dock="Right"
            Margin="0,0,0,8"
            VerticalAlignment="Stretch"
            
            FontSize="14"
            Text="{Binding Complexity, UpdateSourceTrigger=PropertyChanged}" />
        </DockPanel>

        <ListBox x:Name="RadioList"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Margin="-3,0,-3,0"
        
            BorderBrush="Black"
            BorderThickness="0"
                 
            ItemsSource="{Binding Source={x:Static gl:OperationType.Values}}"
            IsSynchronizedWithCurrentItem="True">
            <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border
                                    Padding="2"
                                    Background="WhiteSmoke">
                                    <ContentPresenter
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" Margin="0" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <ToggleButton
                        Content="{Binding}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border x:Name="border"
                                    Padding="10,3,10,3"
                                    CornerRadius="5,5,5,5"
                                    Background="White"
                                        
                                    BorderBrush="Black"
                                    BorderThickness="1,1,1,1"
                                    SnapsToDevicePixels="True">
                                    <TextBlock Text="{Binding Symbol, Mode=OneTime}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="DodgerBlue"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="false" />
                                            <Condition Property="IsMouseOver" Value="true" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="border" Value="LightBlue"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</c:ValueEditorBase>
